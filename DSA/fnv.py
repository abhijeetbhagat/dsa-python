def fnv(data, hash_size):
    hash = get_offset_basis(hash_size)
    fnv_prime = get_fnv_prime(hash_size)

    for byte in data.encode():
        hash = hash ^ byte
        hash = hash * fnv_prime

    return hash

def get_offset_basis(hash_size):
    if hash_size == 32:
        return 2166136261
    elif hash_size == 64:
        return 14695981039346656037
    elif hash_size == 128:
        return 144066263297769815596495629667062367629
    elif hash_size == 256:
        return 100029257958052580907070968620625704837092796014241193945225284501741471925557
    elif hash_size == 512:
        return 9659303129496669498009435400716310466090418745672637896108374329434462657994582932197716438449813051892206539805784495328239340083876191928701583869517785
    elif hash_size == 1024:
        return 14197795064947621068722070641403218320880622795441933960878474914617582723252296732303717722150864096521202355549365628174669108571814760471015076148029755969804077320157692458563003215304957150157403644460363550505412711285966361610267868082893823963790439336411086884584107735010676915
    else:
        return 0

def get_fnv_prime(hash_size):
    if hash_size == 32:
        return 16777619
    elif hash_size == 64:
        return 1099511628211
    elif hash_size == 128:
        return 309485009821345068724781371
    elif hash_size == 256:
        return 374144419156711147060143317175368453031918731002211
    elif hash_size == 512:
        return 35835915874844867368919076489095108449946327955754392558399825615420669938882575126094039892345713852759
    elif hash_size == 1024:
        return 5016456510113118655434598811035278955030765345404790744303017523831112055108147451509157692220295382716162651878526895249385292291816524375083746691371804094271873160484737966720260389217684476157468082573 

print(fnv("abhi", 32))
